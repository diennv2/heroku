{"ast":null,"code":"import axios from '../axios/axios';\n\nconst _addBook = book => ({\n  type: 'ADD_BOOK',\n  book\n});\n\nexport const addBook = (bookData = {\n  title: '',\n  description: '',\n  author: '',\n  published: 0\n}) => {\n  return dispatch => {\n    const book = {\n      title: bookData.title,\n      description: bookData.description,\n      author: bookData.author,\n      published: bookData.published\n    };\n    return axios.post('books', book).then(result => {\n      dispatch(_addBook(result.data));\n    });\n  };\n};\n\nconst _removeBook = ({\n  id\n} = {}) => ({\n  type: 'REMOVE_BOOK',\n  id\n});\n\nexport const removeBook = ({\n  id\n} = {}) => {\n  return dispatch => {\n    return axios.delete(`books/${id}`).then(() => {\n      dispatch(_removeBook({\n        id\n      }));\n    });\n  };\n};\n\nconst _editBook = (id, updates) => ({\n  type: 'EDIT_BOOK',\n  id,\n  updates\n});\n\nexport const editBook = (id, updates) => {\n  return dispatch => {\n    return axios.put(`books/${id}`, updates).then(() => {\n      dispatch(_editBook(id, updates));\n    });\n  };\n};\n\nconst _getBooks = books => ({\n  type: 'GET_BOOKs',\n  books\n});\n\nexport const getBooks = () => {\n  return dispatch => {\n    return axios.get('books').then(result => {\n      const books = [];\n      result.data.forEach(item => {\n        books.push(item);\n      });\n      dispatch(_getBooks(books));\n    });\n  };\n};","map":{"version":3,"sources":["/home/master/eclipse-workspace/Ahihi/crud-example/src/actions/books.js"],"names":["axios","_addBook","book","type","addBook","bookData","title","description","author","published","dispatch","post","then","result","data","_removeBook","id","removeBook","delete","_editBook","updates","editBook","put","_getBooks","books","getBooks","get","forEach","item","push"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,gBAAlB;;AAEA,MAAMC,QAAQ,GAAIC,IAAD,KAAW;AACxBC,EAAAA,IAAI,EAAE,UADkB;AAExBD,EAAAA;AAFwB,CAAX,CAAjB;;AAKA,OAAO,MAAME,OAAO,GAAG,CAACC,QAAQ,GAAG;AAC/BC,EAAAA,KAAK,EAAE,EADwB;AAE/BC,EAAAA,WAAW,EAAE,EAFkB;AAG/BC,EAAAA,MAAM,EAAE,EAHuB;AAI/BC,EAAAA,SAAS,EAAE;AAJoB,CAAZ,KAKjB;AACF,SAAQC,QAAD,IAAc;AACjB,UAAMR,IAAI,GAAG;AACTI,MAAAA,KAAK,EAAED,QAAQ,CAACC,KADP;AAETC,MAAAA,WAAW,EAAEF,QAAQ,CAACE,WAFb;AAGTC,MAAAA,MAAM,EAAEH,QAAQ,CAACG,MAHR;AAITC,MAAAA,SAAS,EAAEJ,QAAQ,CAACI;AAJX,KAAb;AAOA,WAAOT,KAAK,CAACW,IAAN,CAAW,OAAX,EAAoBT,IAApB,EAA0BU,IAA1B,CAA+BC,MAAM,IAAI;AAC5CH,MAAAA,QAAQ,CAACT,QAAQ,CAACY,MAAM,CAACC,IAAR,CAAT,CAAR;AACH,KAFM,CAAP;AAGH,GAXD;AAYH,CAlBM;;AAoBP,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,IAAS,EAAV,MAAkB;AAClCb,EAAAA,IAAI,EAAE,aAD4B;AAElCa,EAAAA;AAFkC,CAAlB,CAApB;;AAKA,OAAO,MAAMC,UAAU,GAAG,CAAC;AAAED,EAAAA;AAAF,IAAS,EAAV,KAAiB;AACvC,SAAQN,QAAD,IAAc;AACjB,WAAOV,KAAK,CAACkB,MAAN,CAAc,SAAQF,EAAG,EAAzB,EAA4BJ,IAA5B,CAAiC,MAAM;AAC1CF,MAAAA,QAAQ,CAACK,WAAW,CAAC;AAAEC,QAAAA;AAAF,OAAD,CAAZ,CAAR;AACH,KAFM,CAAP;AAGH,GAJD;AAKH,CANM;;AAQP,MAAMG,SAAS,GAAG,CAACH,EAAD,EAAKI,OAAL,MAAkB;AAChCjB,EAAAA,IAAI,EAAE,WAD0B;AAEhCa,EAAAA,EAFgC;AAGhCI,EAAAA;AAHgC,CAAlB,CAAlB;;AAMA,OAAO,MAAMC,QAAQ,GAAG,CAACL,EAAD,EAAKI,OAAL,KAAiB;AACrC,SAAQV,QAAD,IAAc;AACjB,WAAOV,KAAK,CAACsB,GAAN,CAAW,SAAQN,EAAG,EAAtB,EAAyBI,OAAzB,EAAkCR,IAAlC,CAAuC,MAAM;AAChDF,MAAAA,QAAQ,CAACS,SAAS,CAACH,EAAD,EAAKI,OAAL,CAAV,CAAR;AACH,KAFM,CAAP;AAGH,GAJD;AAKH,CANM;;AAQP,MAAMG,SAAS,GAAIC,KAAD,KAAY;AAC1BrB,EAAAA,IAAI,EAAE,WADoB;AAE1BqB,EAAAA;AAF0B,CAAZ,CAAlB;;AAKA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC1B,SAAQf,QAAD,IAAc;AACjB,WAAOV,KAAK,CAAC0B,GAAN,CAAU,OAAV,EAAmBd,IAAnB,CAAwBC,MAAM,IAAI;AACrC,YAAMW,KAAK,GAAG,EAAd;AAEAX,MAAAA,MAAM,CAACC,IAAP,CAAYa,OAAZ,CAAoBC,IAAI,IAAI;AACxBJ,QAAAA,KAAK,CAACK,IAAN,CAAWD,IAAX;AACH,OAFD;AAIAlB,MAAAA,QAAQ,CAACa,SAAS,CAACC,KAAD,CAAV,CAAR;AACH,KARM,CAAP;AASH,GAVD;AAWH,CAZM","sourcesContent":["import axios from '../axios/axios';\r\n\r\nconst _addBook = (book) => ({\r\n    type: 'ADD_BOOK',\r\n    book\r\n});\r\n\r\nexport const addBook = (bookData = {\r\n    title: '',\r\n    description: '',\r\n    author: '',\r\n    published: 0\r\n}) => {\r\n    return (dispatch) => {\r\n        const book = {\r\n            title: bookData.title,\r\n            description: bookData.description,\r\n            author: bookData.author,\r\n            published: bookData.published\r\n        };\r\n\r\n        return axios.post('books', book).then(result => {\r\n            dispatch(_addBook(result.data));\r\n        });\r\n    };\r\n};\r\n\r\nconst _removeBook = ({ id } = {}) => ({\r\n    type: 'REMOVE_BOOK',\r\n    id\r\n});\r\n\r\nexport const removeBook = ({ id } = {}) => {\r\n    return (dispatch) => {\r\n        return axios.delete(`books/${id}`).then(() => {\r\n            dispatch(_removeBook({ id }));\r\n        })\r\n    }\r\n};\r\n\r\nconst _editBook = (id, updates) => ({\r\n    type: 'EDIT_BOOK',\r\n    id,\r\n    updates\r\n});\r\n\r\nexport const editBook = (id, updates) => {\r\n    return (dispatch) => {\r\n        return axios.put(`books/${id}`, updates).then(() => {\r\n            dispatch(_editBook(id, updates));\r\n        });\r\n    }\r\n};\r\n\r\nconst _getBooks = (books) => ({\r\n    type: 'GET_BOOKs',\r\n    books\r\n});\r\n\r\nexport const getBooks = () => {\r\n    return (dispatch) => {\r\n        return axios.get('books').then(result => {\r\n            const books = [];\r\n\r\n            result.data.forEach(item => {\r\n                books.push(item);\r\n            });\r\n\r\n            dispatch(_getBooks(books));\r\n        });\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}